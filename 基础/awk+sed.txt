sed 流式编辑器			#修改文本

使用方式:
前置命令 | sed 选项 定址符 指令
sed 选项 定址符 指令 操作的文件

定址符:
	n,m选项
	n,+m选项
	n选项;m选项...
	/内容/选项

选项:
	-n	#屏蔽默认输出
	-r	#支持扩展正则
	-i	#写入文件

指令:
	=	#显示行号
	p	#输出文档内容	'*p'
	d	#删除文档内容	'*d'
	s	#替换		'*s/old/new/'	替换符:Fn(0-9)
	i	#行前添加文本	'*i ***'		不能连续执行多条
	a	#行后添加文本	'*a ***'		不能连续执行多条
	c	#替换当前行	'*c ***'		不能连续执行多条



awk(编程语言/数据处理引擎)		#可用于精确定位查找

使用方式:
前置命令 | awk 选项 条件 指令
awk 选项 条件 指令 操作的文件
awk 选项 '/正则/{定义变量;指令 变量名"常量"列}'

选项:
	-F		#指定分隔符
	-v x=$i	#调用外部变量

指令:
	print		#输出内容到屏幕

内置变量:
列:
	$0(所有列) $1 $2 ...
行号:
	NR
列号:
	NF

awk工作流程:
	BEGIN{***}	#执行一次
	{***}		#按条件执行
	END{***}	#执行一次

awk处理条件:
	正则
	~   !~		#包含,$1~/***/
	比较判断	#数值、字符串的比较判断,$1=="***"
	逻辑符号

awk if判断:
	单分支:
	{if(条件){执行指令}}
	双分支:
	{if(条件){执行指令1}
	 else{执行指令2}}
	多分支:
	{if(条件){执行指令1}
	 else if(条件2){执行指令2}
	 ...
	 else{执行指令n}}

awk数组:
	数组名[下标]
	
awk for循环:
	for(变量 in 数组){执行命令}


























awk -F: 'BEGIN{num[i,j];x[i];y[j];i=1;j=1}{x[i]=i;for(j in y){y[j]=j;num[x[i],y[j]]=$j;j++};i++}END{for(i in x){for(j in y){print num[x[i],y[j]]}}}' aaa.txt 

awk -F: 'BEGIN{num[i,j];x[NR];y[NF];i=1;j=1}{x[i]=i;for(j in y){y[j]=j;num[x[i],y[j]]=$j;j++};i++}END{for(i in x){for(j in y){print num[x[i],y[j]]}}}' /etc/passwd














