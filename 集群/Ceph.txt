SDS(Software Defined Storage)分布式存储

Ceph:
帮助文档:
	http://docs.ceph.org/start/intro

环境准备:
0.真机准备yum源:
	mkdir /var/ftp/ceph
	mount /linux-softceph10.iso /var/ftp/ceph/
1.选择一台主机对所有主机配置无密码连接:
	ssh-keygen -f /root/.ssh/id_rsa -N ''
	for i in 10  11  12  13
	do
		ssh-copy-id  192.168.4.$i
	done
2.设置本地域名解析:
	vim /etc/hosts
		192.168.4.10	client
		192.168.4.11	node1
		192.168.4.12	node2
		192.168.4.13	node3
	for i in client node1  node2  node3
	do
		scp  /etc/hosts   $i:/etc/
	done
3.配置yum源:
	vim /etc/yum.repos.d/ceph.repo
		[mon]
		name=mon
		baseurl=ftp://192.168.4.254/ceph/MON
		enabled=1
		gpgcheck=0
		[osd]
		name=osd
		baseurl=ftp://192.168.4.254/ceph/OSD
		enabled=1
		gpgcheck=0
		[tools]
		name=tools
		baseurl=ftp://192.168.4.254/ceph/Tools
		enabled=1
		gpgcheck=0
	for i in client node1 node2 node3
	do
		scp /etc/yum.repos.d/ceph.repo $i:/etc/yum.repos.d/ceph.repo
	done
4.配置NTP时间服务:
	vim /etc/chrony.conf
		server 192.168.4.254 ibursh
	systemctl restart chronyd
	for i in client node1 node2 node3
	do
		scp /etc/chrony.conf $i:/etc/chrony.conf
		ssh $i "systemctl restart chronyd"
	done
准备一些空磁盘:


部署ceph:

一、安装部署软件:ceph-deploy
1.安装部署工具,学习工具的语法格式
	yum -y install ceph-deploy	#ceph-deploy可多层使用--help
2.创建目录
	mkdir ceph-cluster		#执行ceph-deploy脚本,必须在该目录下
	cd ceph-cluster/

二、部署ceph集群:
1.创建Ceph集群配置,在ceph-cluster目录下生成Ceph配置文件
	ceph-deploy new node1 node2 node3	#主配置文件ceph.conf
	cat ceph.conf
2.给所有节点安装ceph相关软件包
	for i in node1 node2 node3
	do
		ssh $i "yum -y install ceph-mon ceph-osd ceph-mds ceph-radosgw"	#安装服务
	done
	rpm -qa | grep ceph
3.初始化所有节点的mon服务,也就是启动mon服务
	ceph-deploy mon create-initial			#自动拷贝配置文件到mon服务器,自动启动mon
	systemctl status ceph-mon@node1.service
	ceph -s						#查看软件工作状态
   !	[ERROR ] admin_socket: exception getting command descriptions: [Error 2] No such file or directory
	vim ceph.conf     					#如果报错,在文件最后追加以下内容
		public_network = 192.168.4.0/24
	ceph-deploy --overwrite-conf config push node1 node2 node3	#重新推送配置文件
三、创建OSD:
1.创建存储服务器的JOURNAL缓存盘(实际环境中用固态硬盘做缓存盘以提高性能):
	for i in node1 node2 node3
	do
		ssh $i "parted /dev/vdb mklabel gpt"			#parted非交互式分区工具
		ssh $i "parted /dev/vdb mkpart primary 1 50%"
		ssh $i "parted /dev/vdb mkpart primary 50% 100%"
	done
	lsblk
2.磁盘分区后的默认权限无法让ceph软件对其进行读写操作,需要修改权限
	#规则:如果设备名称为/dev/vdb1则设备文件的所有者和所属组都设置为ceph
   #	chown ceph:ceph /dev/vdb1				#临时修改所属权限
	chown ceph:ceph /dev/vdb2
	vim /etc/udev/rules.d/ceph-vdb.rules			#设置规则,永久有效
		ENV{DEVNAME}=="/dev/vdb1",OWNER="ceph",GROUP="ceph"
		ENV{DEVNAME}=="/dev/vdb2",OWNER="ceph",GROUP="ceph"
   #	for i in node1 node2 node3
	do
		ssh $i "chown ceph:ceph /dev/vdb1"
		ssh $i "chown ceph:ceph /dev/vdb2"
		ssh $i "echo 'ENV{DEVNAME}=="/dev/vdb1",OWNER="ceph",GROUP="ceph"' >  /etc/udev/rules.d/ceph-vdb.rules"
		ssh $i "echo 'ENV{DEVNAME}=="/dev/vdb2",OWNER="ceph",GROUP="ceph"' >> /etc/udev/rules.d/ceph-vdb.rules"
	done
	ls -ld /dev/vdc /dev/vdd
3.初始化清空磁盘数据
	for i in node1 node2 node3
	do
		ceph-deploy disk zap $i:vdc $i:vdd		#格式化$i的vdc,vdd
	done
4.创建OSD存储空间
	#创建osd存储设备,vdc为集群提供存储空间,vdb1提供JOURNAL缓存
	#每个存储设备对应一个缓存设备，缓存需要SSD,不需要很大
	for i in node1 node2 node3
	do
		ceph-deploy osd create $i:vdc:/dev/vdb1 $i:vdd:/dev/vdb2
	done
	ceph -s
	ceph osd tree
   !	[ceph_deploy][ERROR ] RuntimeError: bootstrap-osd keyring not found; run 'gatherkeys'
	ceph-deploy gatherkeys node1 node2 node3		#如果出现上面错误,输入该命令


创建Ceph块存储

一、创建镜像
1.查看共享池
	ceph osd lspools
2.创建镜像,查看镜像
	rbd create 镜像名 --image-feature  layering --size 10G		#默认在rbd共享池内
	rbd create 共享池/镜像名  --image-feature  layering --size 10G
	#--image-feature参数指定我们创建的镜像有哪些功能,layering是开启COW(快照)功能
	rbd list				#列出所有镜像
	rbd info 镜像名			#查看镜像详细属性
二、动态调整
1.缩小容量
	rbd resize --size 7G 镜像名 --allow-shrink
2.扩大容量
	rbd resize --size 15G 镜像名
三、通过KRBD访问
1.客户端通过KRBD访问
	#客户端需要安装ceph-common软件包
	yum -y install ceph-common
	#拷贝配置文件（否则不知道集群在哪）
	scp mon服务器ip:/etc/ceph/ceph.conf /etc/ceph/
	#拷贝连接密钥（否则无连接权限）
	scp mon服务器ip:/etc/ceph/ceph.client.admin.keyring /etc/ceph/
	rbd map 镜像名			#访问镜像
	lsblk
	rbd showmapped			#查看镜像信息
2.客户端格式化、挂载分区
	mkfs.xfs /dev/rbd*
	mount /dev/rbd* /mnt/*
四、创建镜像快照
	rbd snap 功能 镜像名
1.查看镜像快照
	rbd snap ls 镜像名
2.给镜像创建快照
	rbd snap create 镜像名 --snap 快照名
3.还原快照
	rbd snap rollback 镜像名 --snap 快照名




















